# Default values for container-image-sync.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
source:
  type: ghcr
  url: ghcr.io
  repoPrefix: audax-io
  auth: 
    mode: PAT
    secretRef:
      create: false
      key: ghcr-user
      name: container-image-sync-secret
target:
  type: ecr
  url: ""
  repoPrefix: audax-io
  region: ap-southeast-3
  repoCreation: true
  lifecycle:
    enabled: false
  policy: 
    enabled: false
    ecrPrincipalArn: ""
  auth: 
    mode: IRSA
    serviceAccount: 
      create: true
      name: ax-cis
      role: ""

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/

skopeo:
  registry: ""
  repository: audax-io/skopeo
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "v3.20.3"
awscli:
  registry: ""
  repository: audax-io/aws-cli
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "2.19.1"

# This is for the secretes for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext:
  runAsNonRoot: true
  runAsUser: 10000
  runAsGroup: 10000
  fsGroup: 10000

securityContext:
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 10000
  allowPrivilegeEscalation: false
  capabilities:
    drop: ["ALL"]


# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 80

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  limits:
    cpu: 400m
    memory: 2000Mi
  requests: 
    cpu: 50m
    memory: 100Mi
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: 
- name: shared-volume
  emptyDir: {}
- name: aws
  emptyDir: {}
- name: docker
  emptyDir: {}
- name: containers
  emptyDir: {}
- name: aws-iam-token
  projected:
    defaultMode: 420
    sources:
    - serviceAccountToken:
        audience: sts.amazonaws.com
        expirationSeconds: 86400
        path: token
- name: scripts
  configMap:
    name: container-image-sync-cm
- name: ghcr-token
  secret:
    secretName: container-image-sync-secret
# - name: ax-ca-bundle
#   configMap:
#     name: ax-ca-bundle

# Additional volumeMounts on the output Deployment definition.
volumeMounts:
- name: shared-volume
  mountPath: /opt/audax/container-image-sync
- name: aws
  mountPath: "/.aws"
- name: docker
  mountPath: "/.docker"
- mountPath: /var/run/secrets/eks.amazonaws.com/serviceaccount
  name: aws-iam-token
  readOnly: true
- name: scripts
  mountPath: /opt/audax/container-image-sync/config
- name: containers
  mountPath: /run/containers
- name: ghcr-token
  mountPath: "/opt/audax/container-image-sync/secret"

nodeSelector: {}

tolerations: []

## pod affinty
affinity:  {}


#extra envs, required for proxy
# env: {}
#   - name: https_proxy
#     value: ""
#   - name: no_proxy
#     value: .amazonaws.com
#   - name: AWS_WEB_IDENTITY_TOKEN_FILE
#     value: /var/run/secrets/eks.amazonaws.com/serviceaccount/token
